#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã - –∑–∞–ø—É—Å–∫–∞–µ—Ç –æ–¥–∏–Ω Tor –ø—Ä–æ—Ü–µ—Å—Å –∏ HTTP –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫
"""
import logging
import time
from config_manager import TorConfigBuilder
from tor_process import TorInstance
from http_load_balancer import HTTPLoadBalancer

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')

def test_simple_architecture():
    print("üöÄ Testing new architecture with simplified setup...")
    
    # 1. –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ñ–∏–≥ –¥–ª—è Tor
    config_builder = TorConfigBuilder()
    print("‚úÖ Config builder created")
    
    # 2. –°–æ–∑–¥–∞—ë–º HTTP –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫
    balancer = HTTPLoadBalancer(listen_port=8080)
    print("‚úÖ HTTP Load Balancer created")
    
    # 3. –°–æ–∑–¥–∞—ë–º –æ–¥–∏–Ω Tor –ø—Ä–æ—Ü–µ—Å—Å (–±–µ–∑ exit nodes –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã)
    tor_instance = TorInstance(port=9050, exit_nodes=[], config_builder=config_builder)
    print("‚úÖ Tor instance created")
    
    try:
        # 4. –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ñ–∏–≥ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º Tor
        print("üìù Creating Tor config...")
        tor_instance.create_config()
        
        print("üîÑ Starting Tor process...")
        tor_instance.start()
        
        # 5. –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞ Tor
        print("‚è≥ Waiting for Tor to start...")
        time.sleep(10)
        
        # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ
        print("üè• Checking Tor health...")
        if tor_instance.check_health():
            print("‚úÖ Tor is healthy!")
            status = tor_instance.get_status()
            print(f"üìä Status: {status}")
        else:
            print("‚ùå Tor health check failed")
            return False
        
        # 7. –î–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º
        print("‚öñÔ∏è Adding to load balancer...")
        balancer.add_proxy(9050)
        balancer.start()
        print("‚úÖ HTTP Load Balancer started on port 8080")
        
        print("\nüéâ SUCCESS! Architecture working!")
        print("üåê Test with: curl -x http://localhost:8080 https://httpbin.org/ip")
        print("‚è±Ô∏è Running for 30 seconds...")
        
        time.sleep(30)
        return True
        
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return False
        
    finally:
        print("üõë Cleaning up...")
        tor_instance.stop()
        balancer.stop()
        print("‚úÖ Cleanup complete")

if __name__ == "__main__":
    success = test_simple_architecture()
    if success:
        print("üéä Test PASSED!")
    else:
        print("üí• Test FAILED!")