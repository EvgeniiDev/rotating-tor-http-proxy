global
  pidfile /var/local/haproxy/haproxy.pid
  maxconn 8192
  user proxy
  stats socket /var/local/haproxy/haproxy.sock mode 666 level admin
  stats timeout 2m
  server-state-file /var/local/haproxy/server-state

defaults
  mode http
  option dontlognull
  option httplog
  option log-health-checks
  option redispatch
  retries 3
  timeout queue 2m
  timeout connect 30s
  timeout client 2m
  timeout server 2m
  timeout check 30s
  timeout http-request 30s
  timeout http-keep-alive 30s
  maxconn 8192
  load-server-state-from-file global

listen stats
  bind 0.0.0.0:4444
  mode http
  option httplog
  maxconn 30
  timeout client 100s
  timeout server 100s
  timeout connect 100s
  timeout queue 100s
  stats enable
  stats hide-version
  stats refresh 30s
  stats show-desc Rotating Tor SOCKS5 Proxy
  stats show-legends
  stats show-node
  stats uri /

frontend http_proxy
  bind 0.0.0.0:8080
  mode http
  maxconn 8192
  default_backend tor_http_tunnel

backend tor_http_tunnel
  mode http
  balance roundrobin
  
  # Включаем поддержку HTTP CONNECT для туннелирования
  option forwardfor
  option http-server-close
  
  # Настройки для корректной работы с HTTP туннелем Tor
  # Tor HTTP туннель поддерживает CONNECT метод для проксирования
  http-request set-header X-Forwarded-For %[src]
  # Увеличиваем таймауты для туннелированных соединений
  timeout server 5m
  timeout connect 30s
  
  # Настройки health check
  timeout check 15s
  http-check send meth GET uri /ip ver HTTP/1.1 hdr Host httpbin.org hdr User-Agent HAProxy-HealthCheck
  
  # Сервера будут добавлены динамически через runtime API
  # Каждый сервер будет иметь параметры: inter 60s fastinter 30s downinter 30s rise 1 fall 2
  # Сервер не удаляется при сбоях, а только помечается как недоступный
  # HAProxy продолжит проверки и восстановит сервер при успешных ответах
