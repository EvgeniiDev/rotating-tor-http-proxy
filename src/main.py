#!/usr/bin/env python3
"""
–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ HAProxy Tor Pool Manager
–ü–æ–ª–Ω–∞—è Python —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–∑ shell —Å–∫—Ä–∏–ø—Ç–æ–≤
"""

import os
import sys
import signal
import logging
import argparse
import time

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ Python path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from tor_haproxy_integrator import TorHAProxyIntegrator


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
def setup_logging(log_level: str = 'INFO'):
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ"""
    logging.basicConfig(
        level=getattr(logging, log_level.upper()),
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        handlers=[
            logging.StreamHandler(sys.stdout)
        ]
    )


# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
pool_manager: TorHAProxyIntegrator | None = None


def signal_handler(signum, frame):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è graceful shutdown"""
    global pool_manager

    signal_names = {
        signal.SIGTERM: 'SIGTERM',
        signal.SIGINT: 'SIGINT',
        signal.SIGQUIT: 'SIGQUIT'
    }

    signal_name = signal_names.get(signum, f'SIG{signum}')
    logging.info(f"üì® –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signal_name}, –Ω–∞—á–∏–Ω–∞—é graceful shutdown...")

    if pool_manager:
        try:
            pool_manager.stop_pool()
            logging.info("‚úÖ HAProxy Tor –ø—É–ª –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        except Exception as exc:  # noqa: BLE001
            logging.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—É–ª–∞: %s", exc)

    sys.exit(0)


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    global pool_manager

    parser = argparse.ArgumentParser(description='HAProxy Tor Pool Manager')
    parser.add_argument('--tor-count', type=int, default=5,
                        help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ Tor –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 5)')
    args = parser.parse_args()

    setup_logging('INFO')

    tor_count = args.tor_count
    tor_env = os.getenv('TOR_PROCESSES')
    if tor_env is not None:
        try:
            env_value = int(tor_env)
            if env_value > 0:
                tor_count = env_value
                logging.info(
                    "TOR_PROCESSES=%s –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä --tor-count", env_value
                )
            else:
                logging.warning("TOR_PROCESSES –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º %s", tor_env)
        except ValueError:
            logging.warning(
                "TOR_PROCESSES=%s –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ %s", tor_env, tor_count
            )

    logging.info("üöÄ HAProxy Tor Pool Manager - –∑–∞–ø—É—Å–∫")
    logging.info("üìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: tor_processes=%s", tor_count)

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
    signal.signal(signal.SIGTERM, signal_handler)
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGQUIT, signal_handler)

    try:
        pool_manager = TorHAProxyIntegrator(max_workers=tor_count)

        if not pool_manager.start_pool(tor_count):
            logging.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—É–ª")
            sys.exit(1)

        stats = pool_manager.get_stats()
        logging.info("=" * 60)
        logging.info("üéâ HAProxy Tor Pool Manager —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
        logging.info("üåê Frontend SOCKS5 proxy: 127.0.0.1:%s", stats['frontend_port'])
        logging.info("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ HAProxy: http://127.0.0.1:%s/stats", stats['stats_port'])
        logging.info("üîÑ –ê–∫—Ç–∏–≤–Ω—ã—Ö Tor –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: %s", stats['tor_processes_running'])
        logging.info("üö™ –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–æ—Ä—Ç—ã: %s", stats['tor_ports'])
        logging.info("üìÅ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: %s", stats['config_dir'])
        logging.info("=" * 60)

        try:
            while pool_manager.is_running():
                time.sleep(60)
                current_stats = pool_manager.get_stats()
                logging.debug(
                    "üìä –°—Ç–∞—Ç—É—Å: HAProxy=%s, Tor=%s/%s",
                    current_stats['haproxy_running'],
                    current_stats['tor_processes_running'],
                    current_stats['tor_processes_total'],
                )
        except KeyboardInterrupt:
            logging.info("üì® –ü–æ–ª—É—á–µ–Ω Ctrl+C, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")

    except Exception as exc:  # noqa: BLE001
        logging.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: %s", exc)
        import traceback
        logging.error(traceback.format_exc())
        sys.exit(1)

    finally:
        if pool_manager:
            try:
                pool_manager.stop_pool()
            except Exception as exc:  # noqa: BLE001
                logging.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–µ: %s", exc)

        logging.info("‚úÖ HAProxy Tor Pool Manager –∑–∞–≤–µ—Ä—à—ë–Ω")


if __name__ == "__main__":
    main()
